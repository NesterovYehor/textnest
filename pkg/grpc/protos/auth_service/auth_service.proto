syntax = "proto3";

package auth;

option go_package = "./;auth";

import "google/protobuf/timestamp.proto";

// --------------------------
// Messages
// --------------------------

// Used for internal storage (not exposed directly in responses)
message User {
    string id = 1;
    google.protobuf.Timestamp created_at = 2;
    string name = 3;
    string email = 4;
    string password = 5;  // Only used during registration/authentication
    bool activated = 6;
    int32 version = 7;
}

// --------------------------
// CreateUser
// --------------------------
message CreateUserRequest {
    string name = 1;
    string email = 2;
    string password = 3;
}

message CreateUserResponse {
    string token = 1;
}

// --------------------------
// ActivateUser
// --------------------------
message ActivateUserRequest {
    string token_hash = 1;
}

message ActivateUserResponse {
    string message = 1;
}

// --------------------------
// AuthenticateUser
// --------------------------
message AuthenticateUserRequest {
    string email = 1;
    string password = 2;
}

message AuthenticateUserResponse {
    string access_token = 1;   // snake_case convention
    string refresh_token = 2;
    google.protobuf.Timestamp expires_in = 3;      // Optional: token TTL in seconds
    google.protobuf.Timestamp refresh_expires_at = 4;      // Optional: token TTL in seconds
}


// --------------------------
// AuthorizeUser 
// --------------------------
message AuthorizeUserRequest {
    string tocken = 1;
}

message AuthorizeUserResponse {
    string user_id = 1;
}



// --------------------------
// Refresh Tokens
// --------------------------
message RefreshTokensRequest {
    string tocken = 1;
}

message RefreshTokensResponse {
    string access_token = 1;   // snake_case convention
    string refresh_token = 2;
    google.protobuf.Timestamp expires_in = 3;      // Optional: token TTL in seconds
    google.protobuf.Timestamp refresh_expires_at = 4;      // Optional: token TTL in seconds
}


// --------------------------
// Create Reset Password Token
// --------------------------
message SendPasswordResetTokenRequest{
    string email = 1;
}

message SendPasswordResetTokenResponse{
    string message = 1;
    
}

// --------------------------
// Reset Password 
// --------------------------
message ResetPasswordRequest{
    string token = 1;
    string password = 2;
}

message ResetPasswordResponse{
    string message = 1;
}

// --------------------------
// Service
// --------------------------
service AuthService {
    rpc CreateUser(CreateUserRequest) returns (CreateUserResponse);
    rpc ActivateUser(ActivateUserRequest) returns (ActivateUserResponse);
    rpc AuthenticateUser(AuthenticateUserRequest) returns (AuthenticateUserResponse);
    rpc AuthorizeUser(AuthorizeUserRequest) returns (AuthorizeUserResponse);
    rpc RefreshTokens(RefreshTokensRequest) returns (RefreshTokensResponse);
    rpc ResetPassword(ResetPasswordRequest) returns (ResetPasswordResponse);
    rpc SendPasswordResetToken(SendPasswordResetTokenRequest) returns (SendPasswordResetTokenResponse);
}
