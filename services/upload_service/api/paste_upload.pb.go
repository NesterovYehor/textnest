// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v5.28.3
// source: paste_upload/paste_upload.proto

package paste_upload

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Upload request message
type UploadPasteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key            string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`                     // Unique paste key
	UserId         string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // User ID (consistent type)
	Title          string                 `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	ExpirationDate *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=expiration_date,json=expirationDate,proto3" json:"expiration_date,omitempty"` // Expiration date
}

func (x *UploadPasteRequest) Reset() {
	*x = UploadPasteRequest{}
	mi := &file_paste_upload_paste_upload_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadPasteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadPasteRequest) ProtoMessage() {}

func (x *UploadPasteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_paste_upload_paste_upload_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadPasteRequest.ProtoReflect.Descriptor instead.
func (*UploadPasteRequest) Descriptor() ([]byte, []int) {
	return file_paste_upload_paste_upload_proto_rawDescGZIP(), []int{0}
}

func (x *UploadPasteRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *UploadPasteRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UploadPasteRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UploadPasteRequest) GetExpirationDate() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpirationDate
	}
	return nil
}

// Upload response message
type UploadPasteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UploadUrl      string                 `protobuf:"bytes,1,opt,name=upload_url,json=uploadUrl,proto3" json:"upload_url,omitempty"`                // Response message (e.g., "Upload successful")
	ExpirationDate *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=expiration_date,json=expirationDate,proto3" json:"expiration_date,omitempty"` // Echo back the expiration date for confirmation
}

func (x *UploadPasteResponse) Reset() {
	*x = UploadPasteResponse{}
	mi := &file_paste_upload_paste_upload_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadPasteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadPasteResponse) ProtoMessage() {}

func (x *UploadPasteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_paste_upload_paste_upload_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadPasteResponse.ProtoReflect.Descriptor instead.
func (*UploadPasteResponse) Descriptor() ([]byte, []int) {
	return file_paste_upload_paste_upload_proto_rawDescGZIP(), []int{1}
}

func (x *UploadPasteResponse) GetUploadUrl() string {
	if x != nil {
		return x.UploadUrl
	}
	return ""
}

func (x *UploadPasteResponse) GetExpirationDate() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpirationDate
	}
	return nil
}

// Update request message
type UploadUpdatesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key    string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	UserId string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // Consistent user ID type
}

func (x *UploadUpdatesRequest) Reset() {
	*x = UploadUpdatesRequest{}
	mi := &file_paste_upload_paste_upload_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadUpdatesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadUpdatesRequest) ProtoMessage() {}

func (x *UploadUpdatesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_paste_upload_paste_upload_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadUpdatesRequest.ProtoReflect.Descriptor instead.
func (*UploadUpdatesRequest) Descriptor() ([]byte, []int) {
	return file_paste_upload_paste_upload_proto_rawDescGZIP(), []int{2}
}

func (x *UploadUpdatesRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *UploadUpdatesRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

// Update response message
type UploadUpdatesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UploadUrl string `protobuf:"bytes,1,opt,name=upload_url,json=uploadUrl,proto3" json:"upload_url,omitempty"` // Response message (e.g., "Update successful" or error details)
}

func (x *UploadUpdatesResponse) Reset() {
	*x = UploadUpdatesResponse{}
	mi := &file_paste_upload_paste_upload_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadUpdatesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadUpdatesResponse) ProtoMessage() {}

func (x *UploadUpdatesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_paste_upload_paste_upload_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadUpdatesResponse.ProtoReflect.Descriptor instead.
func (*UploadUpdatesResponse) Descriptor() ([]byte, []int) {
	return file_paste_upload_paste_upload_proto_rawDescGZIP(), []int{3}
}

func (x *UploadUpdatesResponse) GetUploadUrl() string {
	if x != nil {
		return x.UploadUrl
	}
	return ""
}

type ExpirePasteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key    string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	UserId string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *ExpirePasteRequest) Reset() {
	*x = ExpirePasteRequest{}
	mi := &file_paste_upload_paste_upload_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExpirePasteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExpirePasteRequest) ProtoMessage() {}

func (x *ExpirePasteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_paste_upload_paste_upload_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExpirePasteRequest.ProtoReflect.Descriptor instead.
func (*ExpirePasteRequest) Descriptor() ([]byte, []int) {
	return file_paste_upload_paste_upload_proto_rawDescGZIP(), []int{4}
}

func (x *ExpirePasteRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *ExpirePasteRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type ExpirePasteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *ExpirePasteResponse) Reset() {
	*x = ExpirePasteResponse{}
	mi := &file_paste_upload_paste_upload_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExpirePasteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExpirePasteResponse) ProtoMessage() {}

func (x *ExpirePasteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_paste_upload_paste_upload_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExpirePasteResponse.ProtoReflect.Descriptor instead.
func (*ExpirePasteResponse) Descriptor() ([]byte, []int) {
	return file_paste_upload_paste_upload_proto_rawDescGZIP(), []int{5}
}

func (x *ExpirePasteResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Expire all pastes for a user
type ExpireAllPastesByUserIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // Corrected field number
}

func (x *ExpireAllPastesByUserIDRequest) Reset() {
	*x = ExpireAllPastesByUserIDRequest{}
	mi := &file_paste_upload_paste_upload_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExpireAllPastesByUserIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExpireAllPastesByUserIDRequest) ProtoMessage() {}

func (x *ExpireAllPastesByUserIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_paste_upload_paste_upload_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExpireAllPastesByUserIDRequest.ProtoReflect.Descriptor instead.
func (*ExpireAllPastesByUserIDRequest) Descriptor() ([]byte, []int) {
	return file_paste_upload_paste_upload_proto_rawDescGZIP(), []int{6}
}

func (x *ExpireAllPastesByUserIDRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type ExpireAllPastesByUserIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"` // Response message (e.g., "All pastes expired successfully" or error details)
}

func (x *ExpireAllPastesByUserIDResponse) Reset() {
	*x = ExpireAllPastesByUserIDResponse{}
	mi := &file_paste_upload_paste_upload_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExpireAllPastesByUserIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExpireAllPastesByUserIDResponse) ProtoMessage() {}

func (x *ExpireAllPastesByUserIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_paste_upload_paste_upload_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExpireAllPastesByUserIDResponse.ProtoReflect.Descriptor instead.
func (*ExpireAllPastesByUserIDResponse) Descriptor() ([]byte, []int) {
	return file_paste_upload_paste_upload_proto_rawDescGZIP(), []int{7}
}

func (x *ExpireAllPastesByUserIDResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_paste_upload_paste_upload_proto protoreflect.FileDescriptor

var file_paste_upload_paste_upload_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x70, 0x61, 0x73, 0x74, 0x65, 0x5f, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x2f, 0x70,
	0x61, 0x73, 0x74, 0x65, 0x5f, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x0b, 0x70, 0x61, 0x73, 0x74, 0x65, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x1a, 0x1f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x9a, 0x01, 0x0a, 0x12, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x61, 0x73, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x43, 0x0a, 0x0f, 0x65, 0x78, 0x70, 0x69, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0e, 0x65, 0x78,
	0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x22, 0x79, 0x0a, 0x13,
	0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x61, 0x73, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x75, 0x72,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x55,
	0x72, 0x6c, 0x12, 0x43, 0x0a, 0x0f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0e, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x22, 0x41, 0x0a, 0x14, 0x55, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x36, 0x0a, 0x15, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x75, 0x72,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x55,
	0x72, 0x6c, 0x22, 0x3f, 0x0a, 0x12, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x50, 0x61, 0x73, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x22, 0x2f, 0x0a, 0x13, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x50, 0x61, 0x73,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x22, 0x39, 0x0a, 0x1e, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x41, 0x6c,
	0x6c, 0x50, 0x61, 0x73, 0x74, 0x65, 0x73, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22,
	0x3b, 0x0a, 0x1f, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x41, 0x6c, 0x6c, 0x50, 0x61, 0x73, 0x74,
	0x65, 0x73, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x32, 0xff, 0x02, 0x0a,
	0x0b, 0x50, 0x61, 0x73, 0x74, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x50, 0x0a, 0x0b,
	0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x61, 0x73, 0x74, 0x65, 0x12, 0x1f, 0x2e, 0x70, 0x61,
	0x73, 0x74, 0x65, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x50, 0x61, 0x73, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x70,
	0x61, 0x73, 0x74, 0x65, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x50, 0x61, 0x73, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56,
	0x0a, 0x0d, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x12,
	0x21, 0x2e, 0x70, 0x61, 0x73, 0x74, 0x65, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x22, 0x2e, 0x70, 0x61, 0x73, 0x74, 0x65, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x0b, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65,
	0x50, 0x61, 0x73, 0x74, 0x65, 0x12, 0x1f, 0x2e, 0x70, 0x61, 0x73, 0x74, 0x65, 0x75, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x2e, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x50, 0x61, 0x73, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x70, 0x61, 0x73, 0x74, 0x65, 0x75, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x50, 0x61, 0x73, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x74, 0x0a, 0x17, 0x45, 0x78, 0x70, 0x69,
	0x72, 0x65, 0x41, 0x6c, 0x6c, 0x50, 0x61, 0x73, 0x74, 0x65, 0x73, 0x42, 0x79, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x12, 0x2b, 0x2e, 0x70, 0x61, 0x73, 0x74, 0x65, 0x75, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x2e, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x41, 0x6c, 0x6c, 0x50, 0x61, 0x73, 0x74, 0x65,
	0x73, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2c, 0x2e, 0x70, 0x61, 0x73, 0x74, 0x65, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x45,
	0x78, 0x70, 0x69, 0x72, 0x65, 0x41, 0x6c, 0x6c, 0x50, 0x61, 0x73, 0x74, 0x65, 0x73, 0x42, 0x79,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x11,
	0x5a, 0x0f, 0x2e, 0x2f, 0x3b, 0x70, 0x61, 0x73, 0x74, 0x65, 0x5f, 0x75, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_paste_upload_paste_upload_proto_rawDescOnce sync.Once
	file_paste_upload_paste_upload_proto_rawDescData = file_paste_upload_paste_upload_proto_rawDesc
)

func file_paste_upload_paste_upload_proto_rawDescGZIP() []byte {
	file_paste_upload_paste_upload_proto_rawDescOnce.Do(func() {
		file_paste_upload_paste_upload_proto_rawDescData = protoimpl.X.CompressGZIP(file_paste_upload_paste_upload_proto_rawDescData)
	})
	return file_paste_upload_paste_upload_proto_rawDescData
}

var file_paste_upload_paste_upload_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_paste_upload_paste_upload_proto_goTypes = []any{
	(*UploadPasteRequest)(nil),              // 0: pasteupload.UploadPasteRequest
	(*UploadPasteResponse)(nil),             // 1: pasteupload.UploadPasteResponse
	(*UploadUpdatesRequest)(nil),            // 2: pasteupload.UploadUpdatesRequest
	(*UploadUpdatesResponse)(nil),           // 3: pasteupload.UploadUpdatesResponse
	(*ExpirePasteRequest)(nil),              // 4: pasteupload.ExpirePasteRequest
	(*ExpirePasteResponse)(nil),             // 5: pasteupload.ExpirePasteResponse
	(*ExpireAllPastesByUserIDRequest)(nil),  // 6: pasteupload.ExpireAllPastesByUserIDRequest
	(*ExpireAllPastesByUserIDResponse)(nil), // 7: pasteupload.ExpireAllPastesByUserIDResponse
	(*timestamppb.Timestamp)(nil),           // 8: google.protobuf.Timestamp
}
var file_paste_upload_paste_upload_proto_depIdxs = []int32{
	8, // 0: pasteupload.UploadPasteRequest.expiration_date:type_name -> google.protobuf.Timestamp
	8, // 1: pasteupload.UploadPasteResponse.expiration_date:type_name -> google.protobuf.Timestamp
	0, // 2: pasteupload.PasteUpload.UploadPaste:input_type -> pasteupload.UploadPasteRequest
	2, // 3: pasteupload.PasteUpload.UploadUpdates:input_type -> pasteupload.UploadUpdatesRequest
	4, // 4: pasteupload.PasteUpload.ExpirePaste:input_type -> pasteupload.ExpirePasteRequest
	6, // 5: pasteupload.PasteUpload.ExpireAllPastesByUserID:input_type -> pasteupload.ExpireAllPastesByUserIDRequest
	1, // 6: pasteupload.PasteUpload.UploadPaste:output_type -> pasteupload.UploadPasteResponse
	3, // 7: pasteupload.PasteUpload.UploadUpdates:output_type -> pasteupload.UploadUpdatesResponse
	5, // 8: pasteupload.PasteUpload.ExpirePaste:output_type -> pasteupload.ExpirePasteResponse
	7, // 9: pasteupload.PasteUpload.ExpireAllPastesByUserID:output_type -> pasteupload.ExpireAllPastesByUserIDResponse
	6, // [6:10] is the sub-list for method output_type
	2, // [2:6] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_paste_upload_paste_upload_proto_init() }
func file_paste_upload_paste_upload_proto_init() {
	if File_paste_upload_paste_upload_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_paste_upload_paste_upload_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_paste_upload_paste_upload_proto_goTypes,
		DependencyIndexes: file_paste_upload_paste_upload_proto_depIdxs,
		MessageInfos:      file_paste_upload_paste_upload_proto_msgTypes,
	}.Build()
	File_paste_upload_paste_upload_proto = out.File
	file_paste_upload_paste_upload_proto_rawDesc = nil
	file_paste_upload_paste_upload_proto_goTypes = nil
	file_paste_upload_paste_upload_proto_depIdxs = nil
}
